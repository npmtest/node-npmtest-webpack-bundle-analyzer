{"/home/travis/build/npmtest/node-npmtest-webpack-bundle-analyzer/test.js":"/* istanbul instrument in package npmtest_webpack_bundle_analyzer */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireExampleJsFromReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack-bundle-analyzer/lib.npmtest_webpack_bundle_analyzer.js":"/* istanbul instrument in package npmtest_webpack_bundle_analyzer */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_webpack_bundle_analyzer = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_webpack_bundle_analyzer = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack-bundle-analyzer/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-webpack-bundle-analyzer && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_webpack_bundle_analyzer */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_webpack_bundle_analyzer\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_webpack_bundle_analyzer.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        local.assetsDict['/assets.npmtest_webpack_bundle_analyzer.rollup.js'] =\n            local.assetsDict['/assets.npmtest_webpack_bundle_analyzer.rollup.js'] ||\n            local.fs.readFileSync(\n                // buildCustomOrg-hack\n                local.npmtest_webpack_bundle_analyzer.__dirname +\n                    '/lib.npmtest_webpack_bundle_analyzer.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-webpack-bundle-analyzer/node_modules/webpack-bundle-analyzer/lib/index.js":"'use strict';\n\nvar _require = require('./viewer'),\n    start = _require.start;\n\nmodule.exports = {\n  start: start,\n  BundleAnalyzerPlugin: require('./BundleAnalyzerPlugin')\n};","/home/travis/build/npmtest/node-npmtest-webpack-bundle-analyzer/node_modules/webpack-bundle-analyzer/lib/viewer.js":"'use strict';\n\nvar path = require('path');\nvar fs = require('fs');\n\nvar _ = require('lodash');\nvar express = require('express');\nvar ejs = require('ejs');\nvar opener = require('opener');\nvar mkdir = require('mkdirp');\n\nvar _require = require('chalk'),\n    bold = _require.bold;\n\nvar Logger = require('./Logger');\nvar analyzer = require('./analyzer');\n\nvar projectRoot = path.resolve(__dirname, '..');\n\nmodule.exports = {\n  startServer: startServer,\n  generateReport: generateReport,\n  // deprecated\n  start: startServer\n};\n\nfunction startServer(bundleStats, opts) {\n  var _ref = opts || {},\n      _ref$port = _ref.port,\n      port = _ref$port === undefined ? 8888 : _ref$port,\n      _ref$host = _ref.host,\n      host = _ref$host === undefined ? '127.0.0.1' : _ref$host,\n      _ref$openBrowser = _ref.openBrowser,\n      openBrowser = _ref$openBrowser === undefined ? true : _ref$openBrowser,\n      _ref$bundleDir = _ref.bundleDir,\n      bundleDir = _ref$bundleDir === undefined ? null : _ref$bundleDir,\n      _ref$logger = _ref.logger,\n      logger = _ref$logger === undefined ? new Logger() : _ref$logger;\n\n  var chartData = getChartData(logger, bundleStats, bundleDir);\n\n  if (!chartData) return;\n\n  var app = express();\n\n  // Explicitly using our `ejs` dependency to render templates\n  // Fixes #17\n  app.engine('ejs', require('ejs').renderFile);\n  app.set('view engine', 'ejs');\n  app.set('views', projectRoot + '/views');\n  app.use(express.static(projectRoot + '/public'));\n\n  app.use('/', function (req, res) {\n    res.render('viewer', {\n      mode: 'server',\n      chartData: JSON.stringify(chartData)\n    });\n  });\n\n  return app.listen(port, host, function () {\n    var url = 'http://' + host + ':' + port;\n\n    logger.info(bold('Webpack Bundle Analyzer') + ' is started at ' + bold(url) + '\\n' + ('Use ' + bold('Ctrl+C') + ' to close it'));\n\n    if (openBrowser) {\n      opener(url);\n    }\n  });\n}\n\nfunction generateReport(bundleStats, opts) {\n  var _ref2 = opts || {},\n      _ref2$openBrowser = _ref2.openBrowser,\n      openBrowser = _ref2$openBrowser === undefined ? true : _ref2$openBrowser,\n      _ref2$reportFilename = _ref2.reportFilename,\n      reportFilename = _ref2$reportFilename === undefined ? 'report.html' : _ref2$reportFilename,\n      _ref2$bundleDir = _ref2.bundleDir,\n      bundleDir = _ref2$bundleDir === undefined ? null : _ref2$bundleDir,\n      _ref2$logger = _ref2.logger,\n      logger = _ref2$logger === undefined ? new Logger() : _ref2$logger;\n\n  var chartData = getChartData(logger, bundleStats, bundleDir);\n\n  if (!chartData) return;\n\n  ejs.renderFile(projectRoot + '/views/viewer.ejs', {\n    mode: 'static',\n    chartData: JSON.stringify(chartData),\n    assetContent: getAssetContent\n  }, function (err, reportHtml) {\n    if (err) return logger.error(err);\n\n    var reportFilepath = reportFilename;\n\n    if (!path.isAbsolute(reportFilepath)) {\n      reportFilepath = path.resolve(bundleDir || process.cwd(), reportFilepath);\n    }\n\n    mkdir.sync(path.dirname(reportFilepath));\n    fs.writeFileSync(reportFilepath, reportHtml);\n\n    logger.info(bold('Webpack Bundle Analyzer') + ' saved report to ' + bold(reportFilepath));\n\n    if (openBrowser) {\n      opener('file://' + reportFilepath);\n    }\n  });\n}\n\nfunction getAssetContent(filename) {\n  return fs.readFileSync(projectRoot + '/public/' + filename, 'utf8');\n}\n\nfunction getChartData(logger) {\n  var chartData = void 0;\n\n  try {\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    chartData = analyzer.getViewerData.apply(analyzer, args.concat([{ logger: logger }]));\n  } catch (err) {\n    logger.error('Could\\'t analyze webpack bundle:\\n' + err);\n    chartData = null;\n  }\n\n  if (_.isEmpty(chartData)) {\n    logger.error(\"Could't find any javascript bundles in provided stats file\");\n    chartData = null;\n  }\n\n  return chartData;\n}","/home/travis/build/npmtest/node-npmtest-webpack-bundle-analyzer/node_modules/webpack-bundle-analyzer/lib/Logger.js":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar LEVELS = ['info', 'warn', 'error', 'silent'];\n\nvar LEVEL_TO_CONSOLE_METHOD = new Map([['info', 'log'], ['warn', 'log']]);\n\nvar Logger = function () {\n  function Logger() {\n    var level = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'info';\n\n    _classCallCheck(this, Logger);\n\n    this.activeLevels = new Set();\n    this.setLogLevel(level);\n  }\n\n  Logger.prototype.setLogLevel = function setLogLevel(level) {\n    var levelIndex = LEVELS.indexOf(level);\n\n    if (levelIndex === -1) throw new Error('Invalid log level \"' + level + '\". Use one of these: ' + LEVELS.join(', '));\n\n    this.activeLevels.clear();\n\n    for (var _iterator = LEVELS.entries(), _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref = _i.value;\n      }\n\n      var _ref2 = _ref,\n          i = _ref2[0],\n          _level = _ref2[1];\n\n      if (i >= levelIndex) this.activeLevels.add(_level);\n    }\n  };\n\n  Logger.prototype._log = function _log(level) {\n    var _console;\n\n    for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n      args[_key - 1] = arguments[_key];\n    }\n\n    (_console = console)[LEVEL_TO_CONSOLE_METHOD.get(level) || level].apply(_console, args);\n  };\n\n  return Logger;\n}();\n\nLogger.levels = LEVELS;\n;\n\nLEVELS.forEach(function (level) {\n  if (level === 'silent') return;\n\n  Logger.prototype[level] = function () {\n    for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      args[_key2] = arguments[_key2];\n    }\n\n    if (this.activeLevels.has(level)) this._log.apply(this, [level].concat(args));\n  };\n});\n\nmodule.exports = Logger;","/home/travis/build/npmtest/node-npmtest-webpack-bundle-analyzer/node_modules/webpack-bundle-analyzer/lib/analyzer.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\nvar _ = require('lodash');\nvar gzipSize = require('gzip-size');\n\nvar Logger = require('./Logger');\n\nvar _require = require('../lib/tree'),\n    Folder = _require.Folder;\n\nvar _require2 = require('../lib/parseUtils'),\n    parseBundle = _require2.parseBundle;\n\nvar FILENAME_QUERY_REGEXP = /\\?.*$/;\n\nmodule.exports = {\n  getViewerData: getViewerData,\n  readStatsFromFile: readStatsFromFile\n};\n\nfunction getViewerData(bundleStats, bundleDir, opts) {\n  var _ref = opts || {},\n      _ref$logger = _ref.logger,\n      logger = _ref$logger === undefined ? new Logger() : _ref$logger;\n\n  // Sometimes all the information is located in `children` array (e.g. problem in #10)\n\n\n  if (_.isEmpty(bundleStats.assets) && !_.isEmpty(bundleStats.children)) {\n    bundleStats = bundleStats.children[0];\n  }\n\n  // Picking only `*.js` assets from bundle that has non-empty `chunks` array\n  bundleStats.assets = _.filter(bundleStats.assets, function (asset) {\n    // Removing query part from filename (yes, somebody uses it for some reason and Webpack supports it)\n    // See #22\n    asset.name = asset.name.replace(FILENAME_QUERY_REGEXP, '');\n\n    return _.endsWith(asset.name, '.js') && !_.isEmpty(asset.chunks);\n  });\n\n  // Trying to parse bundle assets and get real module sizes if `bundleDir` is provided\n  var parsedModuleSizes = null;\n  var bundlesSources = {};\n  var parsedModules = {};\n\n  if (bundleDir) {\n    for (var _iterator = bundleStats.assets, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n      var _ref2;\n\n      if (_isArray) {\n        if (_i >= _iterator.length) break;\n        _ref2 = _iterator[_i++];\n      } else {\n        _i = _iterator.next();\n        if (_i.done) break;\n        _ref2 = _i.value;\n      }\n\n      var statAsset = _ref2;\n\n      var assetFile = path.join(bundleDir, statAsset.name);\n      var bundleInfo = void 0;\n\n      try {\n        bundleInfo = parseBundle(assetFile);\n      } catch (err) {\n        bundleInfo = null;\n      }\n\n      if (bundleInfo) {\n        bundlesSources[statAsset.name] = bundleInfo.src;\n        _.assign(parsedModules, bundleInfo.modules);\n      } else {\n        logger.warn('\\nCouldn\\'t parse bundle asset \"' + assetFile + '\".\\n' + 'Analyzer will use module sizes from stats file.\\n');\n        parsedModules = null;\n        bundlesSources = null;\n        break;\n      }\n    }\n\n    if (parsedModules) {\n      parsedModuleSizes = _.mapValues(parsedModules, function (moduleSrc) {\n        return {\n          raw: moduleSrc.length,\n          gzip: gzipSize.sync(moduleSrc)\n        };\n      });\n    }\n  }\n\n  var assets = _.transform(bundleStats.assets, function (result, statAsset) {\n    var asset = result[statAsset.name] = _.pick(statAsset, 'size');\n\n    if (bundlesSources) {\n      asset.parsedSize = bundlesSources[statAsset.name].length;\n      asset.gzipSize = gzipSize.sync(bundlesSources[statAsset.name]);\n    }\n\n    // Picking modules from current bundle script\n    asset.modules = _(bundleStats.modules).filter(function (statModule) {\n      return assetHasModule(statAsset, statModule);\n    }).each(function (statModule) {\n      if (parsedModuleSizes) {\n        statModule.parsedSize = parsedModuleSizes[statModule.id].raw;\n        statModule.gzipSize = parsedModuleSizes[statModule.id].gzip;\n      }\n    });\n\n    asset.tree = createModulesTree(asset.modules);\n  }, {});\n\n  return _.transform(assets, function (result, asset, filename) {\n    result.push({\n      label: filename,\n      // Not using `asset.size` here provided by Webpack because it can be very confusing when `UglifyJsPlugin` is used.\n      // In this case all module sizes from stats file will represent unminified module sizes, but `asset.size` will\n      // be the size of minified bundle.\n      statSize: asset.tree.size,\n      parsedSize: asset.parsedSize,\n      gzipSize: asset.gzipSize,\n      groups: _.invokeMap(asset.tree.children, 'toChartData')\n    });\n  }, []);\n}\n\nfunction readStatsFromFile(filename) {\n  return JSON.parse(fs.readFileSync(filename, 'utf8'));\n}\n\nfunction assetHasModule(statAsset, statModule) {\n  return _.some(statModule.chunks, function (moduleChunk) {\n    return _.includes(statAsset.chunks, moduleChunk);\n  });\n}\n\nfunction createModulesTree(modules) {\n  var root = new Folder('.');\n\n  _.each(modules, function (module) {\n    var path = getModulePath(module.name);\n\n    if (path) {\n      root.addModuleByPath(path, module);\n    }\n  });\n\n  return root;\n}\n\nfunction getModulePath(path) {\n  var parsedPath = _\n  // Removing loaders from module path: they're joined by `!` and the last part is a raw module path\n  .last(path.split('!'))\n  // Splitting module path into parts\n  .split('/')\n  // Removing first `.`\n  .slice(1)\n  // Replacing `~` with `node_modules`\n  .map(function (part) {\n    return part === '~' ? 'node_modules' : part;\n  });\n\n  return parsedPath.length ? parsedPath : null;\n}","/home/travis/build/npmtest/node-npmtest-webpack-bundle-analyzer/node_modules/webpack-bundle-analyzer/lib/tree.js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar _ = require('lodash');\nvar filesize = require('filesize');\n\nvar Node = function () {\n  function Node(name, parent) {\n    _classCallCheck(this, Node);\n\n    this.name = name;\n    this.parent = parent;\n  }\n\n  Node.prototype.toString = function toString(indent) {\n    indent = indent || '|';\n\n    return indent + ' ' + this.name;\n  };\n\n  _createClass(Node, [{\n    key: 'path',\n    get: function get() {\n      var path = [];\n      var node = this;\n\n      while (node) {\n        path.push(node.name);\n        node = node.parent;\n      }\n\n      return path.reverse().join('/');\n    }\n  }]);\n\n  return Node;\n}();\n\nvar Module = function (_Node) {\n  _inherits(Module, _Node);\n\n  function Module(name, data, parent) {\n    _classCallCheck(this, Module);\n\n    var _this = _possibleConstructorReturn(this, _Node.call(this, name, parent));\n\n    _this.data = data;\n    return _this;\n  }\n\n  Module.prototype.mergeData = function mergeData(data) {\n    var _this2 = this;\n\n    _.each(['size', 'parsedSize', 'gzipSize'], function (prop) {\n      if (data[prop]) {\n        _this2.data[prop] = (_this2.data[prop] || 0) + data[prop];\n      }\n    });\n  };\n\n  Module.prototype.toString = function toString(indent) {\n    return _Node.prototype.toString.call(this, indent) + ' [' + this.data.id + '] (' + filesize(this.size) + ')';\n  };\n\n  Module.prototype.toChartData = function toChartData() {\n    return {\n      id: this.data.id,\n      label: this.name,\n      path: this.path,\n      statSize: this.size,\n      parsedSize: this.parsedSize,\n      gzipSize: this.gzipSize\n    };\n  };\n\n  _createClass(Module, [{\n    key: 'size',\n    get: function get() {\n      return this.data.size;\n    }\n  }, {\n    key: 'parsedSize',\n    get: function get() {\n      return this.data.parsedSize;\n    }\n  }, {\n    key: 'gzipSize',\n    get: function get() {\n      return this.data.gzipSize;\n    }\n  }]);\n\n  return Module;\n}(Node);\n\nvar Folder = function (_Node2) {\n  _inherits(Folder, _Node2);\n\n  function Folder(name, parent) {\n    _classCallCheck(this, Folder);\n\n    var _this3 = _possibleConstructorReturn(this, _Node2.call(this, name, parent));\n\n    _this3.children = Object.create(null);\n    return _this3;\n  }\n\n  Folder.prototype.getChild = function getChild(name) {\n    return this.children[name];\n  };\n\n  Folder.prototype.addFolder = function addFolder(name) {\n    var folder = new Folder(name, this);\n\n    this.children[name] = folder;\n    delete this._size;\n    delete this._parsedSize;\n\n    return folder;\n  };\n\n  Folder.prototype.addModule = function addModule(name, data) {\n    var node = this.children[name];\n\n    // For some reason we already have this node in children and it's a folder.\n    if (node && node instanceof Folder) return false;\n\n    if (node) {\n      // We already have this node in children and it's a module.\n      // Merging it's data.\n      node.mergeData(data);\n    } else {\n      // Creating new module.\n      node = new Module(name, data, this);\n      this.children[name] = node;\n    }\n\n    delete this._size;\n    delete this._parsedSize;\n\n    return true;\n  };\n\n  Folder.prototype.addModuleByPath = function addModuleByPath(path, data) {\n    var _ref = [path.slice(0, -1), _.last(path)],\n        pathParts = _ref[0],\n        fileName = _ref[1];\n\n    var currentFolder = this;\n\n    _.each(pathParts, function (pathPart) {\n      var childNode = currentFolder.getChild(pathPart);\n\n      if (\n      // Folder is not created yet\n      !childNode ||\n      // In some situations (invalid usage of dynamic `require()`) webpack generates a module with empty require\n      // context, but it's moduleId points to a directory in filesystem.\n      // In this case we replace this `File` node with `Folder`.\n      // See `test/stats/with-invalid-dynamic-require.json` as an example.\n      !(childNode instanceof Folder)) {\n        childNode = currentFolder.addFolder(pathPart);\n      }\n\n      currentFolder = childNode;\n    });\n\n    currentFolder.addModule(fileName, data);\n  };\n\n  Folder.prototype.walk = function walk(walker) {\n    var state = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    var stopped = false;\n\n    _.each(this.children, function (child) {\n      if (child.walk) {\n        state = child.walk(walker, state, stop);\n      } else {\n        state = walker(child, state, stop);\n      }\n\n      if (stopped) return false;\n    });\n\n    return state;\n\n    function stop(finalState) {\n      stopped = true;\n      return finalState;\n    }\n  };\n\n  Folder.prototype.toString = function toString(indent, opts) {\n    var _ref2 = opts || {},\n        sortBy = _ref2.sortBy;\n\n    indent = indent || '|';\n\n    var str = indent + ' ' + this.name + ' (' + filesize(this.size) + ')\\n';\n\n    str += _(this.children).sortBy(sortBy).reverse().map(function (child) {\n      return child.toString(indent + '  |', opts);\n    }).join('\\n');\n\n    return str;\n  };\n\n  Folder.prototype.toChartData = function toChartData() {\n    return {\n      label: this.name,\n      path: this.path,\n      statSize: this.size,\n      parsedSize: this.parsedSize,\n      gzipSize: this.gzipSize,\n      groups: _.invokeMap(this.children, 'toChartData')\n    };\n  };\n\n  _createClass(Folder, [{\n    key: 'size',\n    get: function get() {\n      if (!_.has(this, '_size')) {\n        this._size = this.walk(function (node, size) {\n          return size + node.size;\n        }, 0);\n      }\n\n      return this._size;\n    }\n  }, {\n    key: 'parsedSize',\n    get: function get() {\n      if (!_.has(this, '_parsedSize')) {\n        this._parsedSize = this.walk(function (node, size, stop) {\n          if (node.parsedSize === undefined) {\n            return stop(undefined);\n          }\n\n          return size + node.parsedSize;\n        }, 0);\n      }\n\n      return this._parsedSize;\n    }\n  }, {\n    key: 'gzipSize',\n    get: function get() {\n      if (!_.has(this, '_gzipSize')) {\n        this._gzipSize = this.walk(function (node, size, stop) {\n          if (node.gzipSize === undefined) {\n            return stop(undefined);\n          }\n\n          return size + node.gzipSize;\n        }, 0);\n      }\n\n      return this._gzipSize;\n    }\n  }]);\n\n  return Folder;\n}(Node);\n\nmodule.exports = {\n  Node: Node,\n  Module: Module,\n  Folder: Folder\n};","/home/travis/build/npmtest/node-npmtest-webpack-bundle-analyzer/node_modules/webpack-bundle-analyzer/lib/parseUtils.js":"'use strict';\n\nvar fs = require('fs');\nvar _ = require('lodash');\nvar acorn = require('acorn');\nvar walk = require('acorn/dist/walk');\n\nmodule.exports = {\n  parseBundle: parseBundle\n};\n\nfunction parseBundle(bundlePath) {\n  var contentBuffer = fs.readFileSync(bundlePath);\n  var contentStr = contentBuffer.toString('utf8');\n  var ast = acorn.parse(contentStr, { sourceType: 'script' });\n\n  var walkState = {\n    locations: null\n  };\n\n  walk.recursive(ast, walkState, {\n    CallExpression: function CallExpression(node, state, c) {\n      if (state.sizes) return;\n\n      var args = node.arguments;\n\n      // Additional bundle without webpack loader.\n      // Modules are stored in second argument, after chunk ids:\n      // webpackJsonp([<chunks>], <modules>, ...)\n      // As function name may be changed with `output.jsonpFunction` option we can't rely on it's default name.\n      if (node.callee.type === 'Identifier' && args.length >= 2 && isArgumentContainsChunkIds(args[0]) && isArgumentContainsModulesList(args[1])) {\n        state.locations = getModulesLocationFromFunctionArgument(args[1]);\n        return;\n      }\n\n      // Additional bundle without webpack loader, with module IDs optimized.\n      // Modules are stored in second arguments Array(n).concat() call\n      // webpackJsonp([<chunks>], Array([minimum ID]).concat([<module>, <module>, ...]))\n      // As function name may be changed with `output.jsonpFunction` option we can't rely on it's default name.\n      if (node.callee.type === 'Identifier' && (args.length === 2 || args.length === 3) && isArgumentContainsChunkIds(args[0]) && isArgumentArrayConcatContainingChunks(args[1])) {\n        state.locations = getModulesLocationFromArrayConcat(args[1]);\n        return;\n      }\n\n      // Main bundle with webpack loader\n      // Modules are stored in first argument:\n      // (function (...) {...})(<modules>)\n      if (node.callee.type === 'FunctionExpression' && !node.callee.id && args.length === 1 && isArgumentContainsModulesList(args[0])) {\n        state.locations = getModulesLocationFromFunctionArgument(args[0]);\n        return;\n      }\n\n      // Walking into arguments because some of plugins (e.g. `DedupePlugin`) or some Webpack\n      // features (e.g. `umd` library output) can wrap modules list into additional IIFE.\n      _.each(args, function (arg) {\n        return c(arg, state);\n      });\n    }\n  });\n\n  if (!walkState.locations) {\n    return null;\n  }\n\n  return {\n    src: contentStr,\n    modules: _.mapValues(walkState.locations, function (loc) {\n      return contentBuffer.toString('utf8', loc.start, loc.end);\n    })\n  };\n}\n\nfunction isArgumentContainsChunkIds(arg) {\n  // Array of numeric ids\n  return arg.type === 'ArrayExpression' && _.every(arg.elements, isNumericId);\n}\n\nfunction isArgumentContainsModulesList(arg) {\n  if (arg.type === 'ObjectExpression') {\n    return _(arg.properties).map('value').every(isModuleWrapper);\n  }\n\n  if (arg.type === 'ArrayExpression') {\n    // Modules are contained in array.\n    // Array indexes are module ids\n    return _.every(arg.elements, function (elem) {\n      return (\n        // Some of array items may be skipped because there is no module with such id\n        !elem || isModuleWrapper(elem)\n      );\n    });\n  }\n\n  return false;\n}\n\nfunction isArgumentArrayConcatContainingChunks(arg) {\n  if (arg.type === 'CallExpression' && arg.callee.type === 'MemberExpression' &&\n  // Make sure the object called is `Array(<some number>)`\n  arg.callee.object.type === 'CallExpression' && arg.callee.object.callee.type === 'Identifier' && arg.callee.object.callee.name === 'Array' && arg.callee.object.arguments.length === 1 && isNumericId(arg.callee.object.arguments[0]) &&\n  // Make sure the property X called for `Array(<some number>).X` is `concat`\n  arg.callee.property.type === 'Identifier' && arg.callee.property.name === 'concat' &&\n  // Make sure exactly one array is passed in to `concat`\n  arg.arguments.length === 1 && arg.arguments[0].type === 'ArrayExpression') {\n    // Modules are contained in `Array(<minimum ID>).concat(` array:\n    // https://github.com/webpack/webpack/blob/v1.14.0/lib/Template.js#L91\n    // The `<minimum ID>` + array indexes are module ids\n    return true;\n  }\n\n  return false;\n}\n\nfunction isModuleWrapper(node) {\n  return (\n    // It's an anonymous function expression that wraps module\n    node.type === 'FunctionExpression' && !node.id ||\n    // If `DedupePlugin` is used it can be an ID of duplicated module...\n    isModuleId(node) ||\n    // or an array of shape [<module_id>, ...args]\n    node.type === 'ArrayExpression' && node.elements.length > 1 && isModuleId(node.elements[0])\n  );\n}\n\nfunction isModuleId(node) {\n  return node.type === 'Literal' && (isNumericId(node) || typeof node.value === 'string');\n}\n\nfunction isNumericId(node) {\n  return node.type === 'Literal' && Number.isInteger(node.value) && node.value >= 0;\n}\n\nfunction getModulesLocationFromFunctionArgument(arg) {\n  if (arg.type === 'ObjectExpression') {\n    var modulesNodes = arg.properties;\n\n    return _.transform(modulesNodes, function (result, moduleNode) {\n      var moduleId = moduleNode.key.name || moduleNode.key.value;\n\n      result[moduleId] = getModuleLocation(moduleNode.value);\n    }, {});\n  }\n\n  if (arg.type === 'ArrayExpression') {\n    var _modulesNodes = arg.elements;\n\n    return _.transform(_modulesNodes, function (result, moduleNode, i) {\n      if (!moduleNode) return;\n\n      result[i] = getModuleLocation(moduleNode);\n    }, {});\n  }\n\n  return {};\n}\n\nfunction getModulesLocationFromArrayConcat(arg) {\n  // arg(CallExpression) =\n  //   Array([minId]).concat([<minId module>, <minId+1 module>, ...])\n  //\n  // Get the [minId] value from the Array() call first argument literal value\n  var minId = arg.callee.object.arguments[0].value;\n  // The modules reside in the `concat()` function call arguments\n  var modulesNodes = arg.arguments[0].elements;\n\n  return _.transform(modulesNodes, function (result, moduleNode, i) {\n    if (!moduleNode) return;\n\n    result[i + minId] = getModuleLocation(moduleNode);\n  }, {});\n}\n\nfunction getModuleLocation(node) {\n  if (node.type === 'FunctionExpression') {\n    node = node.body;\n  }\n\n  return _.pick(node, 'start', 'end');\n}","/home/travis/build/npmtest/node-npmtest-webpack-bundle-analyzer/node_modules/webpack-bundle-analyzer/lib/BundleAnalyzerPlugin.js":"'use strict';\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar fs = require('fs');\nvar path = require('path');\nvar mkdir = require('mkdirp');\n\nvar _require = require('chalk'),\n    bold = _require.bold;\n\nvar Logger = require('./Logger');\nvar viewer = require('./viewer');\n\nvar BundleAnalyzerPlugin = function () {\n  function BundleAnalyzerPlugin(opts) {\n    _classCallCheck(this, BundleAnalyzerPlugin);\n\n    this.opts = _extends({\n      analyzerMode: 'server',\n      analyzerHost: '127.0.0.1',\n      analyzerPort: 8888,\n      reportFilename: 'report.html',\n      openAnalyzer: true,\n      generateStatsFile: false,\n      statsFilename: 'stats.json',\n      statsOptions: null,\n      logLevel: 'info',\n      // deprecated\n      startAnalyzer: true\n    }, opts);\n\n    this.logger = new Logger(this.opts.logLevel);\n  }\n\n  BundleAnalyzerPlugin.prototype.apply = function apply(compiler) {\n    var _this = this;\n\n    this.compiler = compiler;\n\n    compiler.plugin('done', function (stats) {\n      stats = stats.toJson(_this.opts.statsOptions);\n\n      var actions = [];\n\n      if (_this.opts.generateStatsFile) {\n        actions.push(function () {\n          return _this.generateStatsFile(stats);\n        });\n      }\n\n      // Handling deprecated `startAnalyzer` flag\n      if (_this.opts.analyzerMode === 'server' && !_this.opts.startAnalyzer) {\n        _this.opts.analyzerMode = 'disabled';\n      }\n\n      if (_this.opts.analyzerMode === 'server') {\n        actions.push(function () {\n          return _this.startAnalyzerServer(stats);\n        });\n      } else if (_this.opts.analyzerMode === 'static') {\n        actions.push(function () {\n          return _this.generateStaticReport(stats);\n        });\n      }\n\n      if (actions.length) {\n        // Making analyzer logs to be after all webpack logs in the console\n        setImmediate(function () {\n          actions.forEach(function (action) {\n            return action();\n          });\n        });\n      }\n    });\n  };\n\n  BundleAnalyzerPlugin.prototype.generateStatsFile = function generateStatsFile(stats) {\n    var statsFilepath = this.opts.statsFilename;\n\n    if (!path.isAbsolute(statsFilepath)) {\n      statsFilepath = path.resolve(this.compiler.outputPath, statsFilepath);\n    }\n\n    mkdir.sync(path.dirname(statsFilepath));\n\n    fs.writeFileSync(statsFilepath, JSON.stringify(stats, null, 2));\n\n    this.logger.info(bold('Webpack Bundle Analyzer') + ' saved stats file to ' + bold(statsFilepath));\n  };\n\n  BundleAnalyzerPlugin.prototype.startAnalyzerServer = function startAnalyzerServer(stats) {\n    viewer.startServer(stats, {\n      openBrowser: this.opts.openAnalyzer,\n      host: this.opts.analyzerHost,\n      port: this.opts.analyzerPort,\n      bundleDir: this.compiler.outputPath,\n      logger: this.logger\n    });\n  };\n\n  BundleAnalyzerPlugin.prototype.generateStaticReport = function generateStaticReport(stats) {\n    viewer.generateReport(stats, {\n      openBrowser: this.opts.openAnalyzer,\n      reportFilename: this.opts.reportFilename,\n      bundleDir: this.compiler.outputPath,\n      logger: this.logger\n    });\n  };\n\n  return BundleAnalyzerPlugin;\n}();\n\nmodule.exports = BundleAnalyzerPlugin;"}